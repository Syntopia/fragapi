{"version":3,"sources":["Camera2D.js","fragapi.js"],"names":["Camera2D","this","mouseDownX","mouseX","mouseDownY","mouseY","centerX","centerY","zoomFactor","zoom","dragFactor","dragging","dirty","keyUp","keyDown","keyLeft","keyRight","keyW","keyS","prototype","constructor","init","canvasID","addListeners","setCenter","x","y","setZoom","z","mouseDown","e","rect","canvas","getBoundingClientRect","clientX","left","clientY","top","stopDragging","mouseUp","mouseWheel","ev","detail","doZoom","wheelDelta","preventDefault","returnValue","mouseMove","console","log","toggleStatus","keyCode","value","getViewWidth","width","getViewHeight","height","factor","dx","dy","checkKeys","setUniforms","frameBuffer","w","getWidth","h","getHeight","cx","cy","setUniform2f","setUniform1f","document","getElementById","self","addEventListener","event","vertexShader","fragapi","REVISION","window","requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","callback","element","setTimeout","getGlFromCanvas","gl","settings","antialias","depth","alpha","getContext","alert","viewportWidth","viewportHeight","pendingOperations","externalShaders","Map","pendingOperationsCounter","loadScript","src","head","getElementsByTagName","script","createElement","type","onload","appendChild","push","injectShader","length","error","pop","_externalShader","split","join","substring","set","getShader","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","getShaderFromElement","id","shaderScript","currentChild","firstChild","nodeType","TEXT_NODE","textContent","nextSibling","FrameBuffer","name","fragmentShader","create3D","fb","create","create2D","vertexShaderSource","cam","camera","getName","setName","setGl","printDebug","toString","uniform1f","getUniformLocation","v1","v2","uniform2f","setUniform3f","v3","uniform3f","getFromElement","resolve","has","get","text","initShaders","undefined","fragmentShaderSource","vertexShaderCompiled","VERTEX_SHADER","fragmentShaderCompiled","FRAGMENT_SHADER","shaderProgram","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","useProgram","vertexPositionAttribute","getAttribLocation","enableVertexAttribArray","getExtension","start","initBuffers","squareVertexPositionBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","vertices","bufferData","Float32Array","STATIC_DRAW","itemSize","numItems","draw","counter","animate","viewport","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","vertexAttribPointer","FLOAT","drawArrays","TRIANGLE_STRIP","updateUniforms","loc","setDirty","renderToCanvas"],"mappings":"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","file":"fragapi-dev.min.js","sourcesContent":["\r\nvar Camera2D = function() {\r\n\tthis.mouseDownX = 0;\r\n\tthis.mouseX = 0;\r\n\tthis.mouseDownY = 0;\r\n\tthis.mouseY = 0;\r\n\tthis.centerX = 0;\r\n\tthis.centerY = 0;\r\n\t\r\n\tthis.zoomFactor = 1.5;\r\n\tthis.zoom = 1.0;\r\n\tthis.dragFactor = 2.0;\r\n\t\r\n\tthis.dragging = false;\r\n\tthis.dirty = false;\r\n\tthis.keyUp = false; \r\n\tthis.keyDown = false;\r\n\tthis.keyLeft = false;\r\n\tthis.keyRight = false;\r\n\tthis.keyW = false;\r\n\tthis.keyS = false;\r\n};\r\n\r\nCamera2D.prototype = {\r\n\r\n\tconstructor: Camera2D,\r\n\r\n\tinit: function(canvasID) {\r\n\t\tthis.addListeners(canvasID);\r\n\t},\r\n\t\r\n\tsetCenter: function(x,y) {\r\n\t\tthis.centerX = x;\r\n\t\tthis.centerY = y;\r\n\t},\r\n\t\r\n\tsetZoom: function(z) {\r\n\t\tthis.zoom = z;\r\n\t},\r\n\t\r\n\tmouseDown: function(e) {\r\n\t\tvar rect = this.canvas.getBoundingClientRect();\r\n        \r\n\t\tthis.mouseDownX = e.clientX - rect.left;\r\n\t\tthis.mouseDownY = e.clientY - rect.top;\r\n\t\tthis.dragging = true;\r\n\t\tthis.dirty = true;\r\n\t},\r\n\t\r\n\tstopDragging: function() {\r\n\t\tif (this.dragging) {\r\n\t\t\tthis.centerX -= (this.mouseX-this.mouseDownX)*this.zoom*this.dragFactor;\r\n\t\t\tthis.centerY += (this.mouseY-this.mouseDownY)*this.zoom*this.dragFactor;\r\n\t\t}\r\n\t\tthis.dragging = false;\r\n\t\tthis.dirty = true;\r\n\t},\r\n\t\r\n\tmouseUp: function() {\r\n\t\tthis.stopDragging();\r\n\t},\r\n\t\r\n\tmouseWheel: function(ev) {\r\n        if (ev.detail<0.0) this.doZoom(this.zoomFactor);\r\n\t\tif (ev.detail>0.0) this.doZoom(1/this.zoomFactor);\r\n\t\t\r\n\t\tif (ev.wheelDelta<0.0) this.doZoom(this.zoomFactor);\r\n\t\tif (ev.wheelDelta>0.0) this.doZoom(1/this.zoomFactor);\r\n\t\t\r\n        if (ev.preventDefault) ev.preventDefault();\r\n\t\tev.returnValue = false;\r\n\t\tthis.dirty = true;\r\n\t},\r\n\t\r\n\tmouseMove: function(e) {\r\n\t\tvar rect = this.canvas.getBoundingClientRect();\r\n        \r\n\t\tthis.mouseX = e.clientX - rect.left;\r\n\t\tthis.mouseY = e.clientY - rect.top;\r\n\t\tthis.dirty = this.dirty || this.dragging; \r\n\t\tconsole.log(\"[centerX: \" +this.centerX + \" centerY: \" +this.centerY + \" zoom: \" + this.zoom +\"]\");\r\n\t},\r\n\t\r\n\ttoggleStatus: function(keyCode, value, ev) {\r\n\t\tswitch( keyCode ) {\r\n\t\t\tcase 38: this.keyUp = value; break;\r\n\t\t\tcase 40: this.keyDown = value; break;\r\n\t\t\tcase 37: this.keyLeft = value; break;\r\n\t\t\tcase 39: this.keyRight = value; break;\t\t\t\t\t\t\r\n\t\t\tcase 87: this.keyW = value; break;\r\n\t\t\tcase 83: this.keyS = value; break;\r\n\t\t\tdefault: return;\r\n\t\t}\r\n\t\tif (ev.preventDefault) ev.preventDefault();\r\n\t\tev.returnValue = false;\r\n\t\t\r\n\t},\r\n\t\r\n\tgetViewWidth: function() {\r\n\t\treturn this.canvas.getBoundingClientRect().width;\r\n\t},\r\n\t\r\n\tgetViewHeight: function() {\r\n\t\treturn this.canvas.getBoundingClientRect().height;\r\n\t},\r\n\t\r\n\tdoZoom: function(factor) {\r\n\t\tvar dx = this.mouseX-this.getViewWidth()/2;\r\n\t\tvar dy = this.getViewHeight()/2-this.mouseY;\r\n\t\tthis.centerX += dx*2*this.zoom*(1-factor);\r\n\t\tthis.centerY += dy*2*this.zoom*(1-factor);\r\n\t\tthis.zoom *= factor;\r\n\t},\r\n\t\r\n\tcheckKeys: function() {\r\n\t\tif (this.keyDown || this.keyUp || this.keyLeft || this.keyRight || this.keyW || this.keyS) this.dirty = true;\r\n\t\tif (this.keyW) this.doZoom(this.zoomFactor);\r\n\t\tif (this.keyS) this.doZoom(1/this.zoomFactor);\r\n\t\tif (this.keyDown) this.centerY += 10;\r\n\t\tif (this.keyUp) this.centerY -= 10;\r\n\t\tif (this.keyLeft) this.centerX += 10;\r\n\t\tif (this.keyRight) this.centerX -= 10;\r\n\t},\r\n\t\r\n\tsetUniforms: function(frameBuffer) {\r\n\t\tvar w = frameBuffer.getWidth();\r\n\t\tvar h = frameBuffer.getHeight();\r\n\t\t\r\n\t\tvar cx = this.centerX/w;\r\n\t\tvar cy = this.centerY/h;\r\n\t\t\r\n\t\tif (this.dragging) {\r\n\t\t\tcx = (this.centerX-(this.mouseX-this.mouseDownX)*this.zoom*this.dragFactor)/w; \r\n\t\t\tcy = (this.centerY+(this.mouseY-this.mouseDownY)*this.zoom*this.dragFactor)/h;\r\n\t\t}\r\n\t\tframeBuffer.setUniform2f('center', cx, cy);\r\n\t\tframeBuffer.setUniform1f('zoom', this.zoom);\r\n\t},\r\n\t\r\n\taddListeners: function(canvasID) {\r\n\t\tthis.canvas = document.getElementById(canvasID);\r\n\t\t\r\n\t\tvar self = this;\r\n\t\tthis.canvas.addEventListener('mousedown', function(e) { self.mouseDown(e); }, false);\r\n\t\tthis.canvas.addEventListener('mouseup', function(e) { self.mouseUp(e); }, false);\r\n\t\tthis.canvas.addEventListener('mouseout', function(e) { self.mouseUp(e); }, false); // check if dragging outside window.\r\n\t\tthis.canvas.addEventListener('mousemove', function(e) { self.mouseMove(e); }, false); \r\n\t\tthis.canvas.addEventListener('mousewheel', function(e) { self.mouseWheel(e); }, false);\r\n\t\tthis.canvas.addEventListener('DOMMouseScroll', function(e) { self.mouseWheel(e); }, false);\r\n\t\t\r\n\t\tdocument.addEventListener('keydown', function ( event ) { self.toggleStatus(event.keyCode, true, event);}, false );\r\n\t\tdocument.addEventListener('keyup',   function ( event ) { self.toggleStatus(event.keyCode, false, event);}, false );\r\n\t}\r\n};\r\n\r\nCamera2D.vertexShader = \r\n'attribute vec3 position;\\n' +\r\n'varying vec2 pos;\\n' +\r\n'varying vec2 canvasPos;\\n' +\r\n'uniform float zoom;\\n' +\r\n'uniform vec2 center;\\n' +\r\n'\\n' +\r\n'void main() {\\n' +\r\n'\tpos = position.xy * zoom + center;\\n' +\r\n'\tcanvasPos = position.xy;\\n' +\r\n'\tgl_Position =  vec4(position, 1.0);\\n' +\r\n'}\\n';","/**\n * @author Mikael Hvidtfeldt Christensen / twitter: @SyntopiaDK, web: hvidtfeldts.net\n */\n\nvar fragapi = {\n    REVISION: '0.0.0'\n};\n\n// Taken from: https://cvs.khronos.org/svn/repos/registry/trunk/public/webgl/sdk/demos/common/webgl-utils.js\nwindow.requestAnimFrame = (function() {\n    return window.requestAnimationFrame ||\n        window.webkitRequestAnimationFrame ||\n        window.mozRequestAnimationFrame ||\n        function(callback, element) {\n            return window.setTimeout(callback, 1000 / 60); // If no browser support, call at 60 fps\n        };\n})();\n\nif (!window.console) window.console = {};\nif (!window.console.log) window.console.log = function() {};\n\nfragapi.getGlFromCanvas = function(canvasID) {\n    var canvas = document.getElementById(canvasID);\n    var gl;\n    try {\n        var settings = {\n            antialias: false,\n            depth: false,\n            alpha: false\n        };\n        gl = canvas.getContext(\"experimental-webgl\", settings);\n        if (gl === null) {\n            gl = canvas.getContext('webgl', settings);\n        }\n    } catch (e) {}\n    if (!gl) {\n        alert(\"Could not initialise WebGL.\");\n    }\n    gl.viewportWidth = canvas.width;\n    gl.viewportHeight = canvas.height;\n    return gl;\n};\n\nfragapi.pendingOperations = [];\nfragapi.externalShaders = new Map();\nfragapi.pendingOperationsCounter = 0;\n\nfragapi.loadScript = function(src, callback) {\n    var head = document.getElementsByTagName('head')[0];\n    var script = document.createElement('script');\n    script.type = 'text/javascript';\n    script.onload = callback;\n    script.src = src;\n    head.appendChild(script);\n    fragapi.pendingOperations.push(src);\n};\n\nfragapi.injectShader = function() {\n    if (fragapi.pendingOperations.length != 1) {\n        console.error(\"Expected one pending operation\");\n    }\n    var src = fragapi.pendingOperations.pop();\n    console.log(\"Retrieved shader: \" + src + \" %o\", fragapi._externalShader.split(\"\\n\").join().substring(0, 150));\n    fragapi.externalShaders.set(src, fragapi._externalShader);\n};\n\nfragapi.getShader = function(gl, source, type) {\n    var shader = gl.createShader(type);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n        console.log(source);\n        console.log(gl.getShaderInfoLog(shader));\n        alert(gl.getShaderInfoLog(shader));\n        return null;\n    }\n\n    return shader;\n};\n\n// Some functions used from: https://developer.mozilla.org/en/WebGL/Adding_2D_content_to_a_WebGL_context\nfragapi.getShaderFromElement = function(gl, id) {\n    var shaderScript = document.getElementById(id);\n    if (!shaderScript) {\n        return null;\n    }\n\n    var source = \"\";\n\n    // 'shaderScript' is a HTMLScriptElement.\n    // We must extract the text node.\n    var currentChild = shaderScript.firstChild;\n    while (currentChild) {\n        if (currentChild.nodeType == currentChild.TEXT_NODE) {\n            source += currentChild.textContent;\n        }\n        currentChild = currentChild.nextSibling;\n    }\n\n    return fragapi.getShader(gl, source, shaderScript.type);\n};\n\nvar FrameBuffer = function() {\n    this.name = \"Undefined\";\n    this.fragmentShader = \"\";\n    this.vertexShader = \"\";\n};\n\nFrameBuffer.create3D = function(fragmentShader) {\n    var fb = new FrameBuffer();\n    fb.fragmentShader = fragmentShader;\n    return fb;\n};\n\nFrameBuffer.create = function(fragmentShader, vertexShader) {\n    var fb = new FrameBuffer();\n    fb.fragmentShader = fragmentShader;\n    fb.vertexShader = vertexShader;\n    return fb;\n};\n\nFrameBuffer.create2D = function(fragmentShader) {\n    var fb = new FrameBuffer();\n    fb.fragmentShader = fragmentShader;\n    fb.vertexShaderSource = Camera2D.vertexShader;\n\tvar cam = new Camera2D();\n\tfb.camera = cam;\n    return fb;\n};\n\nFrameBuffer.prototype = {\n\n    constructor: FrameBuffer,\n\n    getName: function() {\n        return this.name;\n    },\n\n    setName: function(name) {\n        this.name = name;\n    },\n\n    setGl: function(gl) {\n        this.gl = gl;\n    },\n\n    printDebug: function() {\n        console.log(this.toString());\n    },\n\n    toString: function() {\n        return \"FrameBuffer[\" + this.name + \", fragmentShader='\" + this.fragmentShader + \"', vertexShader = '\" + this.vertexShader + \"']\";\n    },\n\n    setUniform1f: function(name, value) {\n        this.gl.uniform1f(this.getUniformLocation(name), value);\n    },\n\n    setUniform2f: function(name, v1, v2) {\n        this.gl.uniform2f(this.getUniformLocation(name), v1, v2);\n    },\n\n    setUniform3f: function(name, v1, v2, v3) {\n        this.gl.uniform3f(this.getUniformLocation(name), v1, v2, v3);\n    },\n\n    getFromElement: function(id) {\n        var shaderScript = document.getElementById(id);\n        if (!shaderScript) {\n            return null;\n        }\n\n        var source = \"\";\n\n        // 'shaderScript' is a HTMLScriptElement.\n        // We must extract the text node.\n        var currentChild = shaderScript.firstChild;\n        while (currentChild) {\n            if (currentChild.nodeType == currentChild.TEXT_NODE) {\n                source += currentChild.textContent;\n            }\n            currentChild = currentChild.nextSibling;\n        }\n        return source;\n    },\n\n    resolve: function(src, callback) {\n        if (fragapi.externalShaders.has(src)) {\n            console.log(\"Found \" + src + \" in cache\");\n            return fragapi.externalShaders.get(src);\n        }\n\n        var text = this.getFromElement(src);\n        if (text !== null) {\n            console.log(\"Resolved \" + src + \" from element\");\n            return text;\n        }\n\n        if (fragapi.pendingOperations.length > 0) {\n            return;\n        }\n\n        var self = this;\n        fragapi.loadScript(src, function() {\n            self.initShaders();\n        });\n    },\n\n    // Load and compile.\n    initShaders: function() {\n        if (fragapi.pendingOperationsCounter > 10) {\n            console.log(\"I/O timed out:  %O\", fragapi.pendingOperations);\n            return;\n        }\n\n        if (this.vertexShaderSource === undefined && fragapi.pendingOperations.length === 0) {\n            this.vertexShaderSource = this.resolve(this.vertexShader);\n        }\n\t\t\n\t\tif (this.fragmentShaderSource === undefined && fragapi.pendingOperations.length === 0) {\n            this.fragmentShaderSource = this.resolve(this.fragmentShader);\n        }\n\n        if (fragapi.pendingOperations.length > 0) {\n            console.log(\"Pending I/O operations: %O\", fragapi.pendingOperations.join());\n            var self = this;\n\n            fragapi.pendingOperationsCounter++;\n\n            window.setTimeout(function() {\n                self.initShaders();\n            }, 300);\n            return;\n        }\n        var vertexShaderCompiled = fragapi.getShader(this.gl, this.vertexShaderSource, this.gl.VERTEX_SHADER);\n        var fragmentShaderCompiled = fragapi.getShader(this.gl, this.fragmentShaderSource, this.gl.FRAGMENT_SHADER);\n\n        this.shaderProgram = this.gl.createProgram();\n        this.gl.attachShader(this.shaderProgram, vertexShaderCompiled);\n        this.gl.attachShader(this.shaderProgram, fragmentShaderCompiled);\n        this.gl.linkProgram(this.shaderProgram);\n\n        if (!this.gl.getProgramParameter(this.shaderProgram, this.gl.LINK_STATUS)) {\n            alert(\"Could not initialise shaders\");\n        }\n\n        this.gl.useProgram(this.shaderProgram);\n        this.shaderProgram.vertexPositionAttribute = this.gl.getAttribLocation(this.shaderProgram, \"position\");\n        this.gl.enableVertexAttribArray(this.shaderProgram.vertexPositionAttribute);\n\n        // To debug HLSL code. Requires recent chromium build and --enable-privileged-webgl-extensions\n        if (this.gl.getExtension(\"WEBGL_debug_shaders\")) {\n            //console.log(gl.getExtension(\"WEBGL_debug_shaders\").getTranslatedShaderSource(fragmentShaderSource));\n        }\n\n        this.start();\n    },\n\n    // This is a simple quad\n    initBuffers: function() {\n        var gl = this.gl;\n        this.squareVertexPositionBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.squareVertexPositionBuffer);\n        var vertices = [\n            1.0, 1.0, 0.0, -1.0, 1.0, 0.0,\n            1.0, -1.0, 0.0, -1.0, -1.0, 0.0\n        ];\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertices), gl.STATIC_DRAW);\n        this.squareVertexPositionBuffer.itemSize = 3;\n        this.squareVertexPositionBuffer.numItems = 4;\n    },\n\n    init: function() {\n        this.initBuffers();\n        this.initShaders();\n    },\n\n    draw: function() {\n        this.counter++;\n        if (this.counter > 1000) {\n            this.animate = function() {};\n            this.draw = function() {};\n            console.log(\"Killing\");\n        }\n        console.log(\"Drawing frame\");\n        var gl = this.gl;\n        gl.viewport(0, 0, gl.viewportWidth, gl.viewportHeight);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.squareVertexPositionBuffer);\n        gl.vertexAttribPointer(this.shaderProgram.vertexPositionAttribute, this.squareVertexPositionBuffer.itemSize, gl.FLOAT, false, 0, 0);\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, this.squareVertexPositionBuffer.numItems);\n    },\n\n    updateUniforms: function() {\n        console.log(\"Update uniforms - base\");\n    },\n\n    getUniformLocation: function(name) {\n        var loc = this.gl.getUniformLocation(this.shaderProgram, name);\n        return loc;\n    },\n\n    // The main loop. We will only draw when requested to do so.\n    // 'requestAnimationFrame' will only be called when the browser finds it appropriate.\n    animate: function() {\n        if (this.camera) {\n            this.camera.checkKeys();\n            if (this.camera.dirty || this.dirty) {\n                this.camera.setUniforms(this);\n                this.camera.dirty = false;\n                this.dirty = true;\n            }\n        }\n\n        if (this.dirty) {\n            this.updateUniforms();\n            this.dirty = false;\n            this.draw();\n        }\n\n        var self = this;\n        requestAnimFrame(function() {\n            self.animate();\n        });\n    },\n\n    setDirty: function() {\n        this.dirty = true;\n    },\n\n    start: function() {\n        this.counter = 0;\n        this.dirty = true;\n        this.animate();\n    },\n\n    renderToCanvas: function(canvasID) {\n        this.gl = fragapi.getGlFromCanvas(canvasID);\n\t\tif (this.camera) {\n\t\t\tthis.camera.init(canvasID);\n\t\t} \n        this.init();\n    },\n\n    getWidth: function() {\n        return this.gl.viewportWidth;\n    },\n\n    getHeight: function() {\n        return this.gl.viewportHeight;\n    }\n};\n"],"sourceRoot":"/source/"}